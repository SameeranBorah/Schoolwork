John F. Lake, Jr. 
Prelab  (Lab 0)

	For the mortgage part of this lab, I made 4 files: mortgage.cpp, mortgage.h, main.cpp, and makefile.  The main file creates 3 mortgages: one with the default constructor, one with the non-default constructor, and one that has invalid inputs.  The program then displays the use of the credit() method, the getPrincipal() method, and the amortize() method. The user does not do anything in this program - there is no user input, as requested.  The program simply demonstrates that the classes work as intended.  
	The program uses a Mortgage class in order to make different mortgage objects.  The Mortgage class has a default constructor, and a constructor with three inputs: Principal, Rate, and Payment.  The rate is entered as a percentage (5 would be inputted for 5%), and the constructor converts this to a decimal rate.  If the inputs to the non-default constructor are invalid (negative rate, principal, or payment), then the program will execute an error message.
	The main program uses the three methods of the mortgage class: credit(), getPrincipal(), and amortize() in order to perform various actions on a few mortgage objects.  I verified that each method worked by putting in values and doing the calculations by hand.  The amortization table is accurate, and uses formatting flags to maintain width and precision.  If a mortgage has a monthly payment that is too low, the amortize() method will stop running and will state this to the user.  I experimented with a variety of inputs to make sure that the program worked correctly.   
	
